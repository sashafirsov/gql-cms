services:
    gql-cms-db:
        container_name: gql-cms-db
        restart: always
        image: gql-cms-db
        build:
            context: ./apps/db-init/db
        volumes:
            - db:/var/lib/postgresql/data
        env_file:
            - ./.env
        networks:
            - network
        ports:
            - 5432:5432
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5
    graphql:
        container_name: gql-cms-gql-api
        restart: always
        image: gql-cms-gql-api
        build:
            context: ./apps/gql-api
        env_file:
            - ./.env
        environment:
            PORT: 5433
        depends_on:
            - gql-cms-db
        networks:
            - network
        ports:
            - 5433:5433
        command: [  ]
    db-init:
        container_name: gql-cms-db-init
        restart: always
        image: gql-cms-db-init
        build:
            context: ./apps/db-init
        env_file:
            - ./.env
        environment:
            PORT: 5434
        depends_on:
            - gql-cms-db
        networks:
            - network
        ports:
            - 5434:5434
        command: [  ]
    admin-ui:
        container_name: gql-cms-admin-ui
        restart: always
        image: gql-cms-admin-ui
        build:
            context: .
            dockerfile: ./apps/admin-ui/Dockerfile
        env_file:
            - ./.env
        environment:
            PORT: 4200
        depends_on:
            - graphql
            - db-init
        networks:
            - network
        ports:
            - 4200:4200
        command: [  ]
# for postgraphile
#        command: [ "--connection", "${DATABASE_URL}", "--port", "5433", "--schema", "public", "--append-plugins", "postgraphile-plugin-connection-filter" ]

networks:
    network:

volumes:
    db:
